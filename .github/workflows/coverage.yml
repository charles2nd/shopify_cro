name: Coverage Report

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  POSTGRES_VERSION: '14'

jobs:
  coverage:
    name: Generate Coverage Report
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: shopify_cro_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/shopify_cro_test
          DIRECT_URL: postgresql://test_user:test_password@localhost:5432/shopify_cro_test
        run: |
          npx prisma generate
          npx prisma db push --accept-data-loss
          npx prisma db seed

      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/shopify_cro_test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: shopify-cro-copilot
          fail_ci_if_error: false

      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info
          delete-old-comments: true

      - name: Update coverage badge
        if: github.ref == 'refs/heads/main'
        run: |
          COVERAGE=$(node -e "
            const fs = require('fs');
            const summary = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
            const pct = summary.total.statements.pct;
            console.log(Math.round(pct));
          ")
          
          COLOR="red"
          if [ "$COVERAGE" -ge 90 ]; then COLOR="brightgreen"
          elif [ "$COVERAGE" -ge 80 ]; then COLOR="yellow"
          elif [ "$COVERAGE" -ge 70 ]; then COLOR="orange"
          fi
          
          curl -s "https://img.shields.io/badge/coverage-${COVERAGE}%25-${COLOR}.svg" > coverage-badge.svg

      - name: Deploy coverage to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage/lcov-report
          destination_dir: coverage
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'